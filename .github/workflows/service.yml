name: service

on:
  workflow_call:
    outputs:
      firstword:
        description: "The first output string"
        value: ${{ jobs.FirstJob.outputs.foo }}

jobs:

  FirstJob:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."

      - id: finalStep
        run: echo "::set-output name=foo::bar"


  Install:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 15.x, 16.x, 17.x]
    
    steps:
      - uses: actions/checkout@v3

      - name: Check yarn.lock
        id: check_yarn_lock
        uses: andstor/file-existence-action@v1
        with:
          files: "yarn.lock"

      - name: Check package.lock
        id: check_yarn_npm
        uses: andstor/file-existence-action@v1
        with:
          files: "yarn.lock"

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Yarn install
        if: steps.check_yarn_lock.outputs.files_exists == 'true'
        run: yarn

      - name: Npm ci
        if: steps.check_yarn_lock.outputs.files_exists == 'true'
        run: npm ci

      - run: npm run build --if-present
      
      - run: npm test --if-present

