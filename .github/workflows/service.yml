name: service

on:
  workflow_call:
    outputs:
      NoLanguageDetected: 
        description: "Checks if a language is detected"
        value: ${{ jobs.Setup.outputs.NoLanguageDetected }}
      RepositoryIsNode:
        description: "Checks if the repository is a Node.js repository"
        value: ${{ jobs.Setup.outputs.RepositoryIsNode }}
      RepositoryIsPython:
        description: "Checks if the repository is a Python repository"
        value: ${{ jobs.Setup.outputs.RepositoryIsPython }}

jobs:

  Setup:
    runs-on: ubuntu-latest

    outputs:
      NoLanguageDetected: ${{ steps.check_else_write.outputs.test }}
      RepositoryIsNode: ${{ steps.check_node_repository_write.outputs.test }}
      RepositoryIsPython: ${{ steps.check_python_repository_write.outputs.test }}

    steps:
      - uses: actions/checkout@v3

      # nodejs
      - name: Check if Node repository
        id: check_node_repository
        uses: andstor/file-existence-action@v1
        with:
          files: "package.json"

      - name: Update with Node reference
        if: steps.check_node_repository.outputs.files_exists == 'true'
        run: echo "::set-output name=test::true"

      # python
      - name: Check if python repository
        id: check_python_repository
        uses: andstor/file-existence-action@v1
        with:
          files: "requirements.txt, **/*.py"

      - name: Update with Python reference
        if: steps.check_python_repository.outputs.files_exists == 'true'
        run: echo "::set-output name=test::true"

      # else
      - name: Update with undefined reference
        if: |
          always()
          && steps.check_node_repository.outputs.files_exists == 'false'
          && steps.check_python_repository.outputs.files_exists == 'false'
        run: echo "::set-output name=test::true"

  Checkpoint:
    runs-on: ubuntu-latest
    needs: Setup

    steps:
      - run: echo "RepositoryIsNode=${{needs.Setup.outputs.RepositoryIsNode}}"
      - run: echo "RepositoryIsPython=${{needs.Setup.outputs.RepositoryIsPython}}"
      - run: echo "NoLanguageDetected=${{needs.Setup.outputs.NoLanguageDetected}}"


  Install-Node:
    runs-on: ubuntu-latest
    needs: Setup
    if: needs.Setup.outputs.RepositoryIsNode == 'true'
    
    strategy:
      matrix:
        node-version: [14.x, 15.x, 16.x, 17.x]
    
    steps:
      - uses: actions/checkout@v3

      - name: Check yarn.lock
        id: check_yarn_lock
        uses: andstor/file-existence-action@v1
        with:
          files: "yarn.lock"

      - name: Check package.lock
        id: check_yarn_npm
        uses: andstor/file-existence-action@v1
        with:
          files: "package.lock"

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Yarn install
        if: steps.check_yarn_lock.outputs.files_exists == 'true'
        run: yarn

      - name: Npm ci
        if: steps.check_yarn_lock.outputs.files_exists == 'true'
        run: npm ci

      - run: npm run build --if-present
      
      - run: npm test --if-present


  Install-Python:
    runs-on: ubuntu-latest
    needs: Setup
    if: needs.Setup.outputs.RepositoryIsPython == 'true'

    strategy:
      matrix:
        python: [3.7, 3.8, 3.9]
    
    steps:
      - uses: actions/checkout@v3

      - name: Pip install
        run: pip install -r requirements.txt
