#@ def defaultDeployment():
  enable: true
  replicas: 1
  name: svc
  labels: {}
  annotations: {}
  imagePullSecrets: true
  imagePullSecretsName: registry-token

  resources:
    #@schema/type any=True
    limits: []
    #@schema/type any=True
    requests: []

  templateLabels: {}
  matchLabels:
    overwrite: false
    labels: {}
#@ end

#@ def defaultService():
  enable: true
  name: svc
  type: ClusterIP
  controller: null

  #@schema/type any=True
  labels: null
  #@schema/type any=True
  annotations: null
  
  selector:
    overwrite: false
    labels: {}

  #@schema/type any=True
  ports: []

  externalDns:
    enable: false
    domain: acme.io

  #! types specifics
  aws:
    internal: true
    sslCert: ""
    nodeTabels: ""
#@ end

#@ def defaultIngress():
  enable: false
  name: svc
  controller: null
  className: traefik

  #@schema/type any=True
  labels: null
  #@schema/type any=True
  annotations: null

  domain: acme.io
  removeEnvironmentPrefix: false
  
  externalDns:
    enable: false
    
  letsencrypt:
    enable: false
    email: security@acme.io
    type: cluster-issuer

  #! types specifics
  alb:
    public: false
    certificateArn: ""
  nginx:
    certmanager: true
  traefik:
    x: true
#@ end


#@data/values-schema
---

#! PIPELINE CONTROLE
pipelineControl:
  datetime: 'today'
  environmentAsSubdomains: true
  environmentsAsNamespaces: false


#! GLOBAL
ecosystem: acm
organization: acme
containerRegistry: ghcr.io
repository: acm-svc-service
environment: dev
tag: latest
port: 3333


#! FEATURES
features:
  enableLinkerd: false


#! ENVIRONMENT
#@schema/type any=True
env: []
#@schema/type any=True
envFromSecrets: []
#@schema/type any=True
envFromConfigMaps: []
#@schema/type any=True
envFromDependencies: []


#! KUBERNETES
#@schema/default defaultDeployment()
#@schema/type any=True
deployment: null

#@schema/default defaultService()
#@schema/type any=True
service: null

#@schema/default defaultIngress()
#@schema/type any=True
ingress: null
