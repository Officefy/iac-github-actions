#@ def defaultMysql():
  architecture: standalone
  auth:
    database:	svc
    username:	svc
  image:
    debug: false
    pullPolicy: IfNotPresent
    repository: zcube/bitnami-compat/mysql
  metrics:
    enabled: false
    #@schema/type any=True
    extraEnvVars: []
  primary:
    #@schema/type any=True
    nodeSelector: []
    #@schema/type any=True
    extraEnvVars: []
    extraFlags: --innodb-doublewrite=OFF
    persistence:
      enabled: true
      size: 2Gi
      storageClass: ""
    resources:
      #@schema/type any=True
      limits: []
      #@schema/type any=True
      requests: []
#@ end

#@ def defaultPostgres():
  architecture: standalone
  auth:
    database:	svc
    username:	svc
  image:
    debug: false
    pullPolicy: IfNotPresent
    repository: zcube/bitnami-compat/postgresql
  metrics:
    enabled: false
    #@schema/type any=True
    extraEnvVars: []
  primary:
    #@schema/type any=True
    nodeSelector: []
    #@schema/type any=True
    extraEnvVars: []
    persistence:
      enabled: true
      size: 2Gi
      storageClass: ""
    resources:
      #@schema/type any=True
      limits: []
      #@schema/type any=True
      requests: []
#@ end

#@ def defaultRabbitmq():
  auth:
    username:	svc
  clustering:
    enabled: false
  #@schema/type any=True
  extraEnvVars: []
  image:
    debug: false
    pullPolicy: IfNotPresent
    repository: zcube/bitnami-compat/rabbitmq
  ingress:
    enabled: false
  metrics:
    enabled: false
  #@schema/type any=True
  nodeSelector: []
  persistence:
    enabled: true
    size: 2Gi
    storageClass: ""
  resources:
    #@schema/type any=True
    limits: []
    #@schema/type any=True
    requests: []
  serviceAccount:
    create: false
#@ end

#@ def defaultElasticsearch():
  coordinating:
    #@schema/type any=True
    nodeSelector: []
    replicaCount: 1
    resources:
      #@schema/type any=True
      limits: []
      #@schema/type any=True
      requests: []
  curator:
    enabled: false
    #@schema/type any=True
    nodeSelector: []
    replicaCount: 1
    resources:
      #@schema/type any=True
      limits: []
      #@schema/type any=True
      requests: []
  data:
    #@schema/type any=True
    nodeSelector: []
    persistence:
      enabled: true
      size: 2Gi
      storageClass: ""
    replicaCount: 1
    resources:
      #@schema/type any=True
      limits: []
      #@schema/type any=True
      requests: []
  #@schema/type any=True
  extraEnvVars: []
  image:
    debug: false
    pullPolicy: IfNotPresent
    repository: zcube/bitnami-compat/elasticsearch
  ingest:
    #@schema/type any=True
    nodeSelector: []
    replicaCount: 1
    resources:
      #@schema/type any=True
      limits: []
      #@schema/type any=True
      requests: []
  ingress:
    enabled: false
  metrics:
    enabled: false
  master:
    #@schema/type any=True
    nodeSelector: []
    replicaCount: 1
    persistence:
      enabled: true
      size: 2Gi
      storageClass: ""
    resources:
      #@schema/type any=True
      limits: []
      #@schema/type any=True
      requests: []
#@ end

#@ def defaultRedis():
  architecture: standalone
  auth:
    enabled: false
  #@schema/type any=True
  extraEnvVars: []
  image:
    debug: false
    pullPolicy: IfNotPresent
    repository: zcube/bitnami-compat/postgresql
  ingress:
    enabled: false
  metrics:
    enabled: false
  master:
    #@schema/type any=True
    nodeSelector: []
    persistence:
      enabled: false
      size: 2Gi
      storageClass: ""
    resources:
      #@schema/type any=True
      limits: []
      #@schema/type any=True
      requests: []
#@ end

#@ def defaultNats():
  auth:
    enabled: false
  #@schema/type any=True
  nodeSelector: []
  #@schema/type any=True
  extraEnvVars: []
  image:
    debug: false
    pullPolicy: IfNotPresent
  metrics:
    enabled: false
  resources:
    #@schema/type any=True
    limits: []
    #@schema/type any=True
    requests: []
#@ end

#@ def defaultEtcd():
  auth:
    rbac:
      create: false
  #@schema/type any=True
  extraEnvVars: []
  image:
    debug: false
    pullPolicy: IfNotPresent
    repository: zcube/bitnami-compat/postgresql
  metrics:
    enabled: false
  #@schema/type any=True
  nodeSelector: []
  persistence:
    enabled: false
    size: 2Gi	
    storageClass: ""
  resources:
    #@schema/type any=True
    limits: []
    #@schema/type any=True
    requests: []

#@ end

#@data/values-schema
---
repository: acm-svc-acme

#! MYSQL
mysql:
  enabled: false
  version: 9.2.0
  chart: bitnami/mysql
  #@schema/default defaultMysql()
  #@schema/type any=True
  values: {}

#! POSTGRES
postgres:
  enabled: false
  version: 11.6.6
  chart: bitnami/postgresql
  #@schema/default defaultPostgres()
  #@schema/type any=True
  values: {}

#! RABBITMQ
rabbitmq:
  enabled: false
  version: 10.1.7
  chart: bitnami/rabbitmq
  #@schema/default defaultRabbitmq()
  #@schema/type any=True
  values: {}

#! ELASTICSEARCH
elasticsearch:
  enabled: false
  version: 18.2.12
  chart: bitnami/elasticsearch
  #@schema/default defaultElasticsearch()
  #@schema/type any=True
  values: {}

#! REDIS
redis:
  enabled: false
  version: 16.12.1
  chart: bitnami/redis
  #@schema/default defaultRedis()
  #@schema/type any=True
  values: {}

#! NATS
nats:
  enabled: false
  version: 7.3.5
  chart: bitnami/nats
  #@schema/default defaultNats()
  #@schema/type any=True
  values: {}

#! ETCD
etcd:
  enabled: false
  version: 8.3.0
  chart: bitnami/etcd
  #@schema/default defaultEtcd()
  #@schema/type any=True
  values: {}
