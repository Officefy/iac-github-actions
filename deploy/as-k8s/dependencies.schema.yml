#@ def defaultMysql():
  architecture: standalone
  auth:
    database:	svc
    username:	svc
  image:
    debug: false
    pullPolicy: IfNotPresent
    registry: docker.io
    repository: bitnami/mysql
    tag: 8.0.30-debian-11-r3
  metrics:
    enabled: false
    #@schema/type any=True
    extraEnvVars: []
  primary:
    #@schema/type any=True
    nodeSelector: []
    #@schema/type any=True
    extraEnvVars: []
    extraFlags: --innodb-doublewrite=OFF
    persistence:
      enabled: true
      size: 2Gi
      storageClass: ""
    resources:
      #@schema/type any=True
      limits: []
      #@schema/type any=True
      requests: []
#@ end

#@ def defaultPostgres():
  architecture: standalone
  auth:
    database:	svc
    username:	svc
  image:
    debug: false
    pullPolicy: IfNotPresent
    registry: docker.io
    repository: bitnami/postgresql
    tag: 14.4.0-debian-11-r20
  metrics:
    enabled: false
    #@schema/type any=True
    extraEnvVars: []
  primary:
    #@schema/type any=True
    nodeSelector: []
    #@schema/type any=True
    extraEnvVars: []
    persistence:
      enabled: true
      size: 2Gi
      storageClass: ""
    resources:
      #@schema/type any=True
      limits: []
      #@schema/type any=True
      requests: []
#@ end

#@ def defaultRabbitmq():
  auth:
    username:	svc
  clustering:
    enabled: false
  #@schema/type any=True
  extraEnvVars: []
  image:
    debug: false
    pullPolicy: IfNotPresent
    registry: docker.io
    repository: bitnami/rabbitmq
    tag: 3.10.6-debian-11-r5
  ingress:
    enabled: false
  metrics:
    enabled: false
  #@schema/type any=True
  nodeSelector: []
  persistence:
    enabled: true
    size: 2Gi
    storageClass: ""
  resources:
    #@schema/type any=True
    limits: []
    #@schema/type any=True
    requests: []
  serviceAccount:
    create: false
#@ end

#@ def defaultElasticsearch():
  coordinating:
    #@schema/type any=True
    nodeSelector: []
    replicaCount: 1
    resources:
      #@schema/type any=True
      limits: []
      #@schema/type any=True
      requests: []
  curator:
    enabled: false
    #@schema/type any=True
    nodeSelector: []
    replicaCount: 1
    resources:
      #@schema/type any=True
      limits: []
      #@schema/type any=True
      requests: []
  data:
    #@schema/type any=True
    nodeSelector: []
    persistence:
      enabled: true
      size: 2Gi
      storageClass: ""
    replicaCount: 1
    resources:
      #@schema/type any=True
      limits: []
      #@schema/type any=True
      requests: []
  #@schema/type any=True
  extraEnvVars: []
  image:
    debug: false
    pullPolicy: IfNotPresent
    registry: docker.io
    repository: bitnami/elasticsearch
    tag: 8.3.3-debian-11-r1
  ingest:
    #@schema/type any=True
    nodeSelector: []
    replicaCount: 1
    resources:
      #@schema/type any=True
      limits: []
      #@schema/type any=True
      requests: []
  ingress:
    enabled: false
  metrics:
    enabled: false
  master:
    #@schema/type any=True
    nodeSelector: []
    replicaCount: 1
    persistence:
      enabled: true
      size: 2Gi
      storageClass: ""
    resources:
      #@schema/type any=True
      limits: []
      #@schema/type any=True
      requests: []
#@ end

#@ def defaultRedis():
  architecture: standalone
  auth:
    enabled: false
  #@schema/type any=True
  extraEnvVars: []
  image:
    debug: false
    pullPolicy: IfNotPresent
    registry: docker.io
    repository: bitnami/redis
    tag: 7.0.4-debian-11-r7
  ingress:
    enabled: false
  metrics:
    enabled: false
  master:
    #@schema/type any=True
    nodeSelector: []
    persistence:
      enabled: false
      size: 2Gi
      storageClass: ""
    resources:
      #@schema/type any=True
      limits: []
      #@schema/type any=True
      requests: []
#@ end

#@ def defaultNats():
  auth:
    enabled: false
  #@schema/type any=True
  nodeSelector: []
  #@schema/type any=True
  extraEnvVars: []
  image:
    debug: false
    pullPolicy: IfNotPresent
    registry: docker.io
    repository: bitnami/nats
    tag: 2.8.4-debian-11-r24
  metrics:
    enabled: false
  resources:
    #@schema/type any=True
    limits: []
    #@schema/type any=True
    requests: []
#@ end

#@ def defaultEtcd():
  auth:
    rbac:
      create: false
  #@schema/type any=True
  extraEnvVars: []
  image:
    debug: false
    pullPolicy: IfNotPresent
    registry: docker.io
    repository: bitnami/etcd
    tag: 3.5.4-debian-11-r21
  metrics:
    enabled: false
  #@schema/type any=True
  nodeSelector: []
  persistence:
    enabled: false
    size: 2Gi	
    storageClass: ""
  resources:
    #@schema/type any=True
    limits: []
    #@schema/type any=True
    requests: []

#@ end

#@data/values-schema
---
repository: acm-svc-acme

#! MYSQL
mysql:
  enabled: false
  version: 9.2.4
  chart: bitnami/mysql
  #@schema/default defaultMysql()
  #@schema/type any=True
  values: {}

#! POSTGRES
postgres:
  enabled: false
  version: 11.6.23
  chart: bitnami/postgresql
  #@schema/default defaultPostgres()
  #@schema/type any=True
  values: {}

#! RABBITMQ
rabbitmq:
  enabled: false
  version: 10.1.16
  chart: bitnami/rabbitmq
  #@schema/default defaultRabbitmq()
  #@schema/type any=True
  values: {}

#! ELASTICSEARCH
elasticsearch:
  enabled: false
  version: 19.1.5
  chart: bitnami/elasticsearch
  #@schema/default defaultElasticsearch()
  #@schema/type any=True
  values: {}

#! REDIS
redis:
  enabled: false
  version: 16.13.2
  chart: bitnami/redis
  #@schema/default defaultRedis()
  #@schema/type any=True
  values: {}

#! NATS
nats:
  enabled: false
  version: 7.3.9
  chart: bitnami/nats
  #@schema/default defaultNats()
  #@schema/type any=True
  values: {}

#! ETCD
etcd:
  enabled: false
  version: 8.3.6
  chart: bitnami/etcd
  #@schema/default defaultEtcd()
  #@schema/type any=True
  values: {}
